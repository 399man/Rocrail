///////////////////////////////////////////////////////////////////////////// C++ code generated with wxFormBuilder (version Sep 12 2010)// http://www.wxformbuilder.org///// PLEASE DO "NOT" EDIT THIS FILE!///////////////////////////////////////////////////////////////////////////#include "accdecgendlg.h"///////////////////////////////////////////////////////////////////////////AccDecGenDlg::AccDecGenDlg( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxDialog( parent, id, title, pos, size, style ){	this->SetSizeHints( wxDefaultSize, wxDefaultSize );		wxBoxSizer* bSizer1;	bSizer1 = new wxBoxSizer( wxVERTICAL );		m_Notebook = new wxNotebook( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );	m_IndexPanel = new wxPanel( m_Notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );	wxBoxSizer* bSizer2;	bSizer2 = new wxBoxSizer( wxVERTICAL );		m_IndexList = new wxListCtrl( m_IndexPanel, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_HRULES|wxLC_REPORT|wxLC_SINGLE_SEL );	bSizer2->Add( m_IndexList, 1, wxALL|wxEXPAND, 5 );		wxBoxSizer* bSizer3;	bSizer3 = new wxBoxSizer( wxHORIZONTAL );		m_Add = new wxButton( m_IndexPanel, wxID_ANY, wxT("Add"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer3->Add( m_Add, 0, wxALL, 5 );		m_Delete = new wxButton( m_IndexPanel, wxID_ANY, wxT("Delete"), wxDefaultPosition, wxDefaultSize, 0 );	bSizer3->Add( m_Delete, 0, wxALL, 5 );		bSizer2->Add( bSizer3, 0, 0, 5 );		m_IndexPanel->SetSizer( bSizer2 );	m_IndexPanel->Layout();	bSizer2->Fit( m_IndexPanel );	m_Notebook->AddPage( m_IndexPanel, wxT("Index"), false );	m_GeneralPanel = new wxPanel( m_Notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );	wxBoxSizer* bSizer4;	bSizer4 = new wxBoxSizer( wxVERTICAL );		m_Image = new wxBitmapButton( m_GeneralPanel, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW );	bSizer4->Add( m_Image, 0, wxALL, 5 );		wxFlexGridSizer* fgSizer1;	fgSizer1 = new wxFlexGridSizer( 0, 2, 0, 0 );	fgSizer1->AddGrowableCol( 1 );	fgSizer1->SetFlexibleDirection( wxBOTH );	fgSizer1->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_labIID = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("IID"), wxDefaultPosition, wxDefaultSize, 0 );	m_labIID->Wrap( -1 );	fgSizer1->Add( m_labIID, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_IID = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer1->Add( m_IID, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 5 );		m_labID = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("ID"), wxDefaultPosition, wxDefaultSize, 0 );	m_labID->Wrap( -1 );	fgSizer1->Add( m_labID, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_ID = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer1->Add( m_ID, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_labDecFile = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("File"), wxDefaultPosition, wxDefaultSize, 0 );	m_labDecFile->Wrap( -1 );	fgSizer1->Add( m_labDecFile, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		wxFlexGridSizer* fgSizer4;	fgSizer4 = new wxFlexGridSizer( 0, 2, 0, 0 );	fgSizer4->AddGrowableCol( 0 );	fgSizer4->SetFlexibleDirection( wxBOTH );	fgSizer4->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_DecFile = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer4->Add( m_DecFile, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 5 );		m_SelDecFile = new wxButton( m_GeneralPanel, wxID_ANY, wxT("..."), wxDefaultPosition, wxSize( 50,-1 ), 0 );	fgSizer4->Add( m_SelDecFile, 0, wxALL, 5 );		fgSizer1->Add( fgSizer4, 0, wxEXPAND, 5 );		bSizer4->Add( fgSizer1, 0, wxEXPAND, 5 );		wxFlexGridSizer* fgSizer2;	fgSizer2 = new wxFlexGridSizer( 0, 4, 0, 0 );	fgSizer2->SetFlexibleDirection( wxBOTH );	fgSizer2->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_labBus = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Bus"), wxDefaultPosition, wxDefaultSize, 0 );	m_labBus->Wrap( -1 );	fgSizer2->Add( m_labBus, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Bus = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer2->Add( m_Bus, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_labAddr = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Address"), wxDefaultPosition, wxDefaultSize, 0 );	m_labAddr->Wrap( -1 );	fgSizer2->Add( m_labAddr, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Addr = new wxSpinCtrl( m_GeneralPanel, wxID_ANY, wxT("0"), wxDefaultPosition, wxSize( 100,-1 ), wxSP_ARROW_KEYS, 0, 65535, 0 );	fgSizer2->Add( m_Addr, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		bSizer4->Add( fgSizer2, 0, wxEXPAND, 5 );		wxFlexGridSizer* fgSizer3;	fgSizer3 = new wxFlexGridSizer( 0, 4, 0, 0 );	fgSizer3->SetFlexibleDirection( wxBOTH );	fgSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );		m_labProt = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Protocol"), wxDefaultPosition, wxDefaultSize, 0 );	m_labProt->Wrap( -1 );	fgSizer3->Add( m_labProt, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Protocol = new wxComboBox( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0, NULL, wxCB_DROPDOWN|wxCB_READONLY|wxCB_SIMPLE ); 	fgSizer3->Add( m_Protocol, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_labVersion = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Version"), wxDefaultPosition, wxDefaultSize, 0 );	m_labVersion->Wrap( -1 );	fgSizer3->Add( m_labVersion, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Version = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer3->Add( m_Version, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_labManu = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Manu"), wxDefaultPosition, wxDefaultSize, 0 );	m_labManu->Wrap( -1 );	fgSizer3->Add( m_labManu, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_Manu = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer3->Add( m_Manu, 0, wxALL|wxALIGN_CENTER_VERTICAL|wxEXPAND, 5 );		m_labCatNr = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("CatNr"), wxDefaultPosition, wxDefaultSize, 0 );	m_labCatNr->Wrap( -1 );	fgSizer3->Add( m_labCatNr, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		m_CatNr = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	fgSizer3->Add( m_CatNr, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );		bSizer4->Add( fgSizer3, 0, wxEXPAND, 5 );		m_labDesc = new wxStaticText( m_GeneralPanel, wxID_ANY, wxT("Description"), wxDefaultPosition, wxDefaultSize, 0 );	m_labDesc->Wrap( -1 );	bSizer4->Add( m_labDesc, 0, wxALL, 5 );		m_Desc = new wxTextCtrl( m_GeneralPanel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE );	m_Desc->SetMinSize( wxSize( -1,80 ) );		bSizer4->Add( m_Desc, 0, wxALL|wxEXPAND, 5 );		m_GeneralPanel->SetSizer( bSizer4 );	m_GeneralPanel->Layout();	bSizer4->Fit( m_GeneralPanel );	m_Notebook->AddPage( m_GeneralPanel, wxT("Generel"), false );		bSizer1->Add( m_Notebook, 1, wxEXPAND | wxALL, 5 );		m_StdButtons = new wxStdDialogButtonSizer();	m_StdButtonsOK = new wxButton( this, wxID_OK );	m_StdButtons->AddButton( m_StdButtonsOK );	m_StdButtonsApply = new wxButton( this, wxID_APPLY );	m_StdButtons->AddButton( m_StdButtonsApply );	m_StdButtonsCancel = new wxButton( this, wxID_CANCEL );	m_StdButtons->AddButton( m_StdButtonsCancel );	m_StdButtons->Realize();	bSizer1->Add( m_StdButtons, 0, wxALL|wxALIGN_RIGHT, 5 );		this->SetSizer( bSizer1 );	this->Layout();	bSizer1->Fit( this );		this->Centre( wxBOTH );		// Connect Events	m_Add->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onAdd ), NULL, this );	m_Delete->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onDelete ), NULL, this );	m_Image->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onImage ), NULL, this );	m_StdButtonsApply->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onApply ), NULL, this );	m_StdButtonsCancel->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onCancel ), NULL, this );	m_StdButtonsOK->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onOK ), NULL, this );}AccDecGenDlg::~AccDecGenDlg(){	// Disconnect Events	m_Add->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onAdd ), NULL, this );	m_Delete->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onDelete ), NULL, this );	m_Image->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onImage ), NULL, this );	m_StdButtonsApply->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onApply ), NULL, this );	m_StdButtonsCancel->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onCancel ), NULL, this );	m_StdButtonsOK->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( AccDecGenDlg::onOK ), NULL, this );	}