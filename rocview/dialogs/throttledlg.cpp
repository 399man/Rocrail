/* Rocrail - Model Railroad Software Copyright (C) 2002-2013 Rob Versluis, Rocrail.net Without an official permission commercial use is not permitted. Forking this project is not permitted. This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.*/#include "throttledlg.h"#include "rocs/public/str.h"#include "rocs/public/trace.h"#include "rocview/xpm/nopict.xpm"ThrottleDlg::ThrottleDlg( wxWindow* parent )  :ThrottleDlgGen( parent ){  this->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( ThrottleDlg::onButton ) );  this->Connect( wxEVT_SCROLL_THUMBRELEASE, wxScrollEventHandler( ThrottleDlg::onSlider ) );  m_LocoImage->SetBitmapLabel( wxBitmap(nopict_xpm) );  GetSizer()->Fit(this);  GetSizer()->Layout();}void ThrottleDlg::onSlider(wxScrollEvent& event) {  TraceOp.trc( "throttledlg", TRCLEVEL_INFO, __LINE__, 9999, "slider %d", m_SpeedSlider->GetValue() );  m_Speed->SetValue( wxString::Format(wxT("%d"), m_SpeedSlider->GetValue()) );}void ThrottleDlg::onButton(wxCommandEvent& event) {  TraceOp.trc( "throttledlg", TRCLEVEL_INFO, __LINE__, 9999, "OnButton event..." );  if ( event.GetEventObject() == m_F1 ) {    TraceOp.trc( "throttledlg", TRCLEVEL_INFO, __LINE__, 9999, "F1" );  }  else if ( event.GetEventObject() == m_F2 ) {    TraceOp.trc( "throttledlg", TRCLEVEL_INFO, __LINE__, 9999, "F2" );  }  else if ( event.GetEventObject() == m_F3 ) {    TraceOp.trc( "throttledlg", TRCLEVEL_INFO, __LINE__, 9999, "F3" );  }}void ThrottleDlg::onClose( wxCloseEvent& event ) {  Destroy();}